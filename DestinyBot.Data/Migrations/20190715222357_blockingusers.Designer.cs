// <auto-generated />
using DestinyBot.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DestinyBot.Data.Migrations
{
    [DbContext(typeof(DestinyBotContext))]
    [Migration("20190715222357_blockingusers")]
    partial class blockingusers
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028");

            modelBuilder.Entity("DestinyBot.Data.Entities.BlockedUser", b =>
                {
                    b.Property<ulong>("UserId")
                        .ValueGeneratedOnAdd();

                    b.HasKey("UserId");

                    b.ToTable("BlockedUsers");
                });

            modelBuilder.Entity("DestinyBot.Data.Entities.CustomCommand", b =>
                {
                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Aliases");

                    b.Property<string>("Content");

                    b.HasKey("Name");

                    b.ToTable("CustomCommands");
                });

            modelBuilder.Entity("DestinyBot.Data.Entities.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("EndTime");

                    b.Property<string>("Name");

                    b.Property<long>("StartTime");

                    b.Property<long>("TwitchStreamerId");

                    b.HasKey("Id");

                    b.HasIndex("TwitchStreamerId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("DestinyBot.Data.Entities.GuildOwner", b =>
                {
                    b.Property<string>("GuildId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ChannelHub");

                    b.Property<string>("Snowflake");

                    b.Property<long>("TwitchId");

                    b.Property<long>("TwitterUserId");

                    b.Property<string>("YoutubeId");

                    b.HasKey("GuildId");

                    b.ToTable("GuildOwners");
                });

            modelBuilder.Entity("DestinyBot.Data.Entities.Reminder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("ChannelId");

                    b.Property<long>("DateCreated");

                    b.Property<long>("GuildId");

                    b.Property<string>("Message");

                    b.Property<long>("TimeToRemind");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.ToTable("Reminders");
                });

            modelBuilder.Entity("DestinyBot.Data.Entities.TwitchStreamer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<long>("SteamStartTime");

                    b.Property<long>("StreamEndTime");

                    b.HasKey("Id");

                    b.ToTable("TwitchStreamers");
                });

            modelBuilder.Entity("DestinyBot.Data.Entities.TwitchSubscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AlternateLink");

                    b.Property<string>("DiscordChannelId");

                    b.Property<bool>("Message");

                    b.Property<long>("MessageId");

                    b.Property<string>("MessageText");

                    b.Property<bool>("ShouldPin");

                    b.Property<long>("TwitchStreamerId");

                    b.HasKey("Id");

                    b.HasIndex("TwitchStreamerId");

                    b.ToTable("TwitchSubscriptions");
                });

            modelBuilder.Entity("DestinyBot.Data.Entities.TwitterSubscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("DiscordChannelId");

                    b.Property<long>("TwitterUserId");

                    b.HasKey("Id");

                    b.HasIndex("TwitterUserId");

                    b.ToTable("TwitterSubscriptions");
                });

            modelBuilder.Entity("DestinyBot.Data.Entities.TwitterUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("LastTweetId");

                    b.Property<string>("Name");

                    b.Property<string>("ScreenName");

                    b.HasKey("Id");

                    b.HasIndex("LastTweetId");

                    b.ToTable("TwitterUsers");
                });

            modelBuilder.Entity("DestinyBot.Data.Entities.Youtube", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("LatestVideoDate");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Channels");
                });

            modelBuilder.Entity("DestinyBot.Data.Entities.YoutubeSubscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DiscordChannelId");

                    b.Property<string>("YoutubeId");

                    b.HasKey("Id");

                    b.HasIndex("YoutubeId");

                    b.ToTable("YoutubeSubscriptions");
                });

            modelBuilder.Entity("DestinyBot.Data.Entities.Game", b =>
                {
                    b.HasOne("DestinyBot.Data.Entities.TwitchStreamer", "TwitchStreamer")
                        .WithMany("Games")
                        .HasForeignKey("TwitchStreamerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DestinyBot.Data.Entities.TwitchSubscription", b =>
                {
                    b.HasOne("DestinyBot.Data.Entities.TwitchStreamer", "TwitchStreamer")
                        .WithMany("TwitchSubscriptions")
                        .HasForeignKey("TwitchStreamerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DestinyBot.Data.Entities.TwitterSubscription", b =>
                {
                    b.HasOne("DestinyBot.Data.Entities.TwitterUser", "User")
                        .WithMany("TwitterSubscriptions")
                        .HasForeignKey("TwitterUserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DestinyBot.Data.Entities.YoutubeSubscription", b =>
                {
                    b.HasOne("DestinyBot.Data.Entities.Youtube", "Youtube")
                        .WithMany("YoutubeSubscriptions")
                        .HasForeignKey("YoutubeId");
                });
#pragma warning restore 612, 618
        }
    }
}
